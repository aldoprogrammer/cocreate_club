/users/register:
  post:
    tags:
      - Users
    summary: Register a new user
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              fullName:
                type: string
                example: John Doe
              email:
                type: string
                example: john@example.com
              password:
                type: string
                example: password123
              walletAddress:
                type: string
                example: 0x71C7656EC7ab88b098defB751B7401B5f6d8976F
              role:
                type: string
                enum: [audience, creator]
                example: audience
    responses:
      201:
        description: User registered successfully
      400:
        description: Bad request

/users/login:
  post:
    tags:
      - Users
    summary: Login user
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: john@example.com
              password:
                type: string
                example: password123
    responses:
      200:
        description: Login successful
      400:
        description: Invalid credentials

/users/me:
  get:
    tags:
      - Users
    summary: Get current user profile
    security:
      - bearerAuth: []
    responses:
      200:
        description: User profile retrieved
      401:
        description: Unauthorized

/users/logout:
  post:
    tags:
      - Users
    summary: Logout user
    security:
      - bearerAuth: []
    responses:
      200:
        description: Logout successful
      500:
        description: Server error